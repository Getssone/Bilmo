# config\packages\nelmio_api_doc.yaml

nelmio_api_doc:
  documentation:
    info:
      title: Bilmo
      description: Une API pour vendre des Téléphones et mieux connaître ca clientèle
      version: 1.0.0
    paths:
      /api/login_check:
        post:
          operationId: postCredentialsItem
          tags:
            - Token
          summary: Permet d'obtenir le token JWT pour se logger.
          requestBody:
            description: Crée un nouveau token JWT
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Credentials"
          responses:
            "200":
              description: Récupère le token JWT
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Token"
    components:
      schemas:
        Token:
          type: object
          properties:
            token:
              type: string
              readOnly: true
        Credentials:
          type: object
          properties:
            email:
              type: string
              default: free@free.fr
            password:
              type: string
              default: password
      securitySchemes:
        bearerAuth:
          type: apiKey
          in: header
          name: Authorization # or another header name
    security:
      - bearerAuth: []
  areas: # to filter documented areas
    path_patterns:
      - ^/api(?!/doc$) # Accepts routes under /api except /api/doc
  models:
    names:
      - { alias: MainUser, type: App\Entity\User }
      - {
          alias: MainUser_getUserProfil,
          type: App\Entity\User,
          groups: [getUserProfil],
        }
      - {
          alias: MainUser_getClient,
          type: App\Entity\User,
          groups: [getCustomers, getClient, getUserCustomerID, getArrayClient],
        }
      - {
          alias: MainUser_getInfoCustomerArray,
          type: App\Entity\User,
          groups: [getArrayClient, getClient],
        }
      - {
          alias: MainUser_getInfoCustomerArray,
          type: App\Entity\User,
          groups: [getArrayClient, getClient],
        }
      - {
          alias: MainUser_createClient,
          type: App\Entity\User,
          groups: [createdUser, getCustomers, getClient],
        }
      - {
          alias: MainUser_createUser,
          type: App\Entity\User,
          groups: [createUserClient_bodyOA, createUserParticulier_bodyOA],
        }
      - {
          alias: MainUser_getCustomers,
          type: App\Entity\User,
          groups: [getCustomers],
        }
      - {
          alias: MainUser_updateUser,
          type: App\Entity\User,
          groups: [updateClient_bodyOA, updateParticulier_bodyOA],
        }

      - { alias: MainPhone, type: App\Entity\Phone }
      - {
          alias: MainPhone_getAllPhone,
          type: App\Entity\Phone,
          groups: [getPhones],
        }
